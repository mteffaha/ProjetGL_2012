<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- Fichier build.xml -->

<project name="Projet2012" default="run" basedir=".">

	<property file="build.properties" />

	<target name="init" description="Initialise les répertoires du projet">
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${plugins.dir}" />
	</target>

	<path id="class.path">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="initPlugins" description="Installation des plugins">
		<copy todir="${plugins.dir}">
			<fileset dir="${PulginsBebete.dir}">
				<include name="Bebete*.class" />
				<exclude name="BebeteAvecComportement.class" />
				<exclude name="Bebete.class" />
				<exclude name="*Test.class" />
			</fileset>
			<fileset file="${PulginsBebete.dir}/ChampiRouge.class" />
		</copy>
	</target>

	<!-- cible modifiee, classpathref modifié utilisant celui defini plus haut -->

	<target name="compile" depends="cleanall,init" description="Compile les classes du projet">

		<javac description="Compilation de classes de package simu "
			srcdir="${src.dir}" destdir="${classes.dir}" debug="on" fork="true"
			classpathref="class.path" encoding="ISO-8859-1" />

	</target>

	<!-- ###################################################################### -->

	<target name="jar" depends="compile,initPlugins" description="Genere le .jar du projet">
		<mkdir dir="${dist.dir}/lib" />

		<!-- Mets la classe principale dans le fichier MANIFEST.MF -->
		<copy file="./MANIFEST.MF" tofile="./META-INF/MANIFEST.MF">
			<filterset>
				<filter token="main.class" value="${main.class}" />
			</filterset>
		</copy>

		<jar jarfile="${dist.dir}/lib/${project.name}.jar" manifest="./META-INF/MANIFEST.MF"
			basedir="${classes.dir}" />
	</target>

	<target name="run" depends="compile,initPlugins,jar,test"
		description="Execute le projet">
		<java jar="${dist.dir}/lib/${project.name}.jar" fork="true" />
	</target>

	<!-- Retrait du delete de lib, sinon les libs sont supprimées -->

	<target name="clean" description="Supprime les fichiers construits">
		<!-- Supprime les fichiers construits -->
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${api.dir}" />
		<delete dir="${tests.dir}" />
		<delete dir="plugins" />
	</target>

	<!-- ######################################################## -->

	<target name="cleanall" depends="clean"
		description="Supprime davantage de fichiers construits">
		<delete dir="./META-INF" />
	</target>


	<target name="javadoc" depends="init" description="Genere la javadoc du projet">
		<javadoc destdir="${api.dir}" use="true">
			<packageset dir="${src.dir}">
				<include name="**" />
			</packageset>
		</javadoc>
	</target>

	<target name="installnewplugins" description="Installe de nouveaux plugins">
		<copy todir="${plugins.dir}">
			<fileset dir="./pluginsDeTest" />
		</copy>
	</target>


	<target name="test" depends="compile,initPlugins" description="Lance les tests">
		<mkdir dir="${tests.dir}" />
		<copy todir="${tests.dir}">
			<fileset dir="${classes.dir}">
				<include name="**/*Test.class" />
			</fileset>
		</copy>

		
		<path id = "test.path">
		    <pathelement location="${tests.dir}" />
		    <pathelement location="${classes.dir}" />
		    <path refid="class.path"/>
		</path>
		
		<junit printsummary="no" haltonfailure="yes" fork="yes">
			<classpath refid="test.path" />
			<formatter type="brief" usefile="false" />

			<batchtest>
				<fileset dir="${tests.dir}">
					<exclude name="App/TestPluginsBebetes.class" />
					<exclude name="util/TestDynamique.class" />
					<include name="**/*Test.class" />
				</fileset>
			</batchtest>
		</junit>
		 
	</target>

</project>